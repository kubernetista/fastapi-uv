# gitlab-ci Dagger pipeline

# Job template that defines the Docker-in-Docker service
.docker:
  image: docker:latest
  services:
    - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: "1"
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_CERT_PATH: "/certs/client"
    DOCKER_DRIVER: overlay2
    DOCKER_VERSION: "27.2.0"
    # assumes the Dagger Cloud token is
    # in a masked/protected variable named DAGGER_CLOUD_TOKEN
    # set via the GitLab UI
    # DAGGER_CLOUD_TOKEN: $DAGGER_CLOUD_TOKEN
    # Do not show link to Dagger Cloud
    SHUTUP: "true"

# Job template that installs the Dagger CLI
.dagger:
  extends: [.docker]
  before_script:
    - apk add curl
    - curl -fsSL https://dl.dagger.io/dagger/install.sh | BIN_DIR=/usr/local/bin sh
# prettier-ignore

# # Dagger job that calls the hello function from the Daggerverse
# hello:
#   extends: [.dagger]
#   stage: test
#   script:
#     - dagger -m github.com/shykes/daggerverse/hello@v0.1.2 call hello --greeting="Ciao" --name="Mondo"
#     # for ephemeral runners only: override the default docker stop timeout and
#     # give the Dagger Engine more time to push cache data to Dagger Cloud
#     - docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)

# # Dagger job that calls the container-echo function from the local module
# goodbye:
#   extends: [.dagger]
#   stage: test
#   # needs: ["hello"]    # Just a TEST
#   script:
#     - dagger functions
#     - dagger call container-echo --string-arg=TEST
#     # for ephemeral runners only: override the default docker stop timeout and
#     # give the Dagger Engine more time to push cache data to Dagger Cloud
#     - docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)

# Dagger job that calls the build function from the local module
# build:
#   extends: [.dagger]
#   stage: build
#   script:
#     - dagger call build --src=.
#     # for ephemeral runners only: override the default docker stop timeout and
#     # give the Dagger Engine more time to push cache data to Dagger Cloud
#     - docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)

push:
  extends: [.dagger]
  stage: push
  script:
    # - echo dagger call publish --registry="$CI_REGISTRY" --username="$CI_REGISTRY_USER" --password=env:CI_REGISTRY_PASSWORD --path "$CI_PROJECT_PATH" --image "$CI_PROJECT_TITLE" --tag "$CI_COMMIT_SHORT_SHA"
    - dagger call build-publish --registry="$CI_REGISTRY" --username="$CI_REGISTRY_USER" --password=env:CI_REGISTRY_PASSWORD --path "$CI_PROJECT_PATH" --image "$CI_PROJECT_TITLE" --tag "$CI_COMMIT_SHORT_SHA" --src .
    # - dagger call publish --registry="$CI_REGISTRY" --username="$CI_REGISTRY_USER" --password=env:CI_REGISTRY_PASSWORD --path "$CI_PROJECT_PATH" --image "" --tag "$CI_COMMIT_SHORT_SHA"
    # for ephemeral runners only: override the default docker stop timeout and
    # give the Dagger Engine more time to push cache data to Dagger Cloud
    - docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)
#
# test:
#   extends: [.dagger]
#   script:
#     - dagger -m github.com/kpenfound/dagger-modules/golang@v0.2.0 call test --source=.
#     # for ephemeral runners only: override the default docker stop timeout and
#     # give the Dagger Engine more time to push cache data to Dagger Cloud
#     - docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)

# build:
#   extends: [.dagger]
#   needs: ["test"]
#   script:
#     - dagger -m github.com/kpenfound/dagger-modules/golang@v0.2.0 call build-container --source=. --args=. publish --address=ttl.sh/my-app-$RANDOM
#     # for ephemeral runners only: override the default docker stop timeout and
#     # give the Dagger Engine more time to push cache data to Dagger Cloud
#     - docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)
