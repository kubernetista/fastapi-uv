# .gitlab-ci.yml

stages:
  - test
  - build
  - integration-test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# Test & coverage
test:
  image: ubuntu:latest
  stage: test
  before_script:
    # Install necessary packages
    - apt-get update && apt-get install -y curl
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - source $HOME/.cargo/env
    - uv python install 3.12
  script:
    # Run tests using uv
    - uv run pytest --cov --cov-config=pyproject.toml --cov-report=xml
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml

# Build the Docker image
build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    # Log in to GitLab Container Registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    # Build the Docker image and tag it
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" . --push
    # Push the image to the registry
    # - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"

# Integration test
integration-test:
  image: docker:latest
  stage: integration-test
  services:
    - docker:dind
  before_script:
    # Install curl
    - apt-get update && apt-get install -y curl
  script:
    # Log in to GitLab Container Registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    # Pull the Docker image from the registry
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    # Run the Docker container
    - docker run -d --rm --name fastapi-uv "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    # Wait for the service to start
    - sleep 5
    # Get the container's IP address
    - CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' fastapi-uv)
    # Perform the curl test
    - |
      RESPONSE=$(curl -s http://$CONTAINER_IP:8001)
      echo "Response from server: $RESPONSE"
      # Check if the response matches the expected output
      echo "$RESPONSE" | grep -q '"message": "OK"'
    # Stop the container
    - docker stop fastapi-uv
